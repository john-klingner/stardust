<?xml version="1.0"?>
<robot name="r1" xmlns:xacro="http://ros.org/wiki/xacro">
	<!-- Import robot model -->
  	<xacro:include filename="$(find sd_description)/urdf/r1.xacro" />

	<gazebo>
		<!-- ros_control plugin -->
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
			<robotNamespace>/r1</robotNamespace>
			<robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
		</plugin>

		<!-- ground truth plugin -->
		<plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
			<alwaysOn>true</alwaysOn>
			<updateRate>20.0</updateRate>
			<bodyName>base_link</bodyName>
			<frameName>world</frameName>
			<robotNamespace>/r1</robotNamespace>
			<topicName>ground_truth</topicName>
			<gaussianNoise>0.0</gaussianNoise>
			<xyzOffsets>0 0 0</xyzOffsets>
			<rpyOffsets>0 0 0</rpyOffsets>
		</plugin>
	</gazebo>

	<gazebo>
		<plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
			<alwaysOn>true</alwaysOn>
			<bodyName>base_link</bodyName>
			<frameName>r1/imu_link</frameName>
			<topicName>imu/data</topicName>
			<gaussianNoise>0.0</gaussianNoise>
			<updateRate>20.0</updateRate>
			<robotNamespace>/r2</robotNamespace>
			<serviceName>r1_imu_service</serviceName>
			<xyzOffset>0 0 0</xyzOffset>
			<rpyOffset>0 0 0</rpyOffset>
		</plugin>
	 </gazebo>
	
	<gazebo reference="imu_link">
		<material>Gazebo/Blue</material>
	 </gazebo>
	
	<gazebo reference="laser_frame">
		<sensor type="ray" name="head_hokuyo_sensor">
			<pose>0 0 0 0 0 0</pose>
			<visualize>false</visualize>
			<update_rate>40</update_rate>
			<ray>
				<scan>
					<horizontal>
						<samples>360</samples>
						<resolution>1</resolution>
						<min_angle>${-pi}</min_angle>
						<max_angle>${pi}</max_angle>
					</horizontal>
				</scan>
				<range>
					<min>0.06</min>
					<max>5.0</max>
					<resolution>0.01</resolution>
				</range>
				<noise>
					<type>gaussian</type>
					<!-- Noise parameters based on published spec for Hokuyo laser
					achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
					stddev of 0.01m will put 99.7% of samples within 0.03m of the true
					reading. -->
					<mean>0.0</mean>
					<stddev>0.01</stddev>
				</noise>
			</ray>
			<plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
				<topicName>laser/scan</topicName>
				<frameName>laser_frame</frameName>
				<robotNamespace>/r1</robotNamespace>
			</plugin>
		</sensor>
		<material>Gazebo/Blue</material>
	</gazebo>

	<gazebo reference="body_link">
		<mu1>0.01</mu1>
		<mu2>0.01</mu2>
		<material>Gazebo/Red</material>
	</gazebo>

	<!-- One roller of the wheel -->
    <xacro:macro name="roller_gazebo" params="parent name">
        <gazebo reference="roller_${name}_${parent}_link">
	        <mu1>0.5</mu1>
			<mu2>0.5</mu2>
			<material>Gazebo/White</material>
		</gazebo>	
    </xacro:macro>

    <!-- Roller loop -->
    <xacro:macro name="roller_loop_gazebo" params="parent roller_i prefix">
        <xacro:if value="${roller_i}">
            <xacro:roller_gazebo parent="${parent}" name="${prefix}_${roller_i}" />
            <xacro:roller_loop_gazebo parent="${parent}" roller_i="${roller_i - 1}" prefix="${prefix}"/>
        </xacro:if>
    </xacro:macro>

    <!-- Whell with rollers -->
    <xacro:macro name="omni_wheel_gazebo" params="name">
        <gazebo reference="${name}_wheel_link">
	        <mu1>0.01</mu1>
			<mu2>0.01</mu2>
			<material>Gazebo/Black</material>
		</gazebo>
        <xacro:roller_loop_gazebo parent="${name}_wheel" prefix="ext" roller_i="${wheel_roller_number}" />
        <xacro:roller_loop_gazebo parent="${name}_wheel" prefix="int" roller_i="${wheel_roller_number}" />
    </xacro:macro>

    <omni_wheel_gazebo name="left" />
    <omni_wheel_gazebo name="right" />
    <omni_wheel_gazebo name="back" />

</robot>