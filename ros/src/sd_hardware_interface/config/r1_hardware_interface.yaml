control_loop:
  loop_hz: 100 # in Hz
  cycle_time_error_threshold: 0.1 # in seconds (Means an 10% error threshold for 100Hz)
  print_state: true   # true to see controller state in console (every second)
  publish_state: true # publish regulator state to topics

hardware_interface:
  is_quadrature_encoder : true
  velocity_controller_enabled : true
  timeout: 1.0 # seconds
  joints: 
    - right_wheel_to_base
    - left_wheel_to_base
    - back_wheel_to_base
  encoder_topics:
    - encoder/right
    - encoder/left
    - encoder/back
  pwm_topics:
    - pwm/right
    - pwm/left
    - pwm/back
  speed_topics:
    - speed/right
    - speed/left
    - speed/back
  pwm_max:
    - 4096
    - 4096
    - 4096
  encoder_steps_for_one_wheel_revolution:
    - 206.0
    - 206.0
    - 206.0
  velocity_controllers_velocity_to_pwm: 
    - 725.0  # Unit : if pwm = velocity_controllers_velocity_to_pwm, wheel rotates at 1 rad/s
    - 725.0
    - 725.0
  velocity_controllers_friction_pwm: 
    - 450.0 # Minimum PWM allowing the wheel to turn
    - 450.0
    - 450.0  
  velocity_controllers_pid_p:
    - 124.0
    - 124.0
    - 124.0
  velocity_controllers_pid_i:
    - 0.0010
    - 0.0010
    - 0.0010
  velocity_controllers_pid_d:
    - 0.001
    - 0.001
    - 0.001

rosserial_server:
  baud: 1000000
  port: /dev/ttyUSB0
